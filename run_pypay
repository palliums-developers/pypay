#!/usr/bin/env python3
# -*- mode: python -*-
#
import sys
import os

MIN_PYTHON_VERSION = "3.6.1"  # FIXME duplicated from setup.py
_min_python_version_tuple = tuple(map(int, (MIN_PYTHON_VERSION.split("."))))

if sys.version_info[:3] < _min_python_version_tuple:
    sys.exit("Error: PyPay requires Python version >= %s..." % MIN_PYTHON_VERSION)

def check_imports():
    # pure-python dependencies need to be imported here for pyinstaller
    try:
        import qrcode
    except ImportError as e:
        sys.exit(f"Error: {str(e)}. Try 'sudo python3 -m pip install <module-name>'")

check_imports()

from PyQt5.QtQml import QQmlApplicationEngine, qmlRegisterType
from PyQt5.QtGui import QGuiApplication, QIcon
from PyQt5.QtCore import QUrl, Qt
from pypay import PayController, TokenEntry, TokenModel, DepositEntry, DepositModel, BorrowEntry, BorrowModel
from pypay import HistoryEntry, HistoryModel
from pypay import BitTransactionEntry, BitTransactionModel
from pypay import AddrBookEntry, AddrBookModel

if __name__ == '__main__':
    QGuiApplication.setAttribute(Qt.AA_EnableHighDpiScaling);

    app = QGuiApplication(sys.argv)

    QGuiApplication.setWindowIcon(QIcon("pypay/qml/icons/pypay.png"));

    qmlRegisterType(TokenEntry, "PyPay", 1, 0, "TokenEntry")
    qmlRegisterType(TokenModel, "PyPay", 1, 0, "TokenModel")
    qmlRegisterType(BitTransactionEntry, "PyPay", 1, 0, "BitTransactionEntry")
    qmlRegisterType(BitTransactionModel, "PyPay", 1, 0, "BitTransactionModel")
    qmlRegisterType(AddrBookEntry, "PyPay", 1, 0, "AddrBookEntry")
    qmlRegisterType(AddrBookModel, "PyPay", 1, 0, "AddrBookModel")
    qmlRegisterType(HistoryEntry, "PyPay", 1, 0, "HistoryEntry")
    qmlRegisterType(HistoryModel, "PyPay", 1, 0, "HistoryModel")
    qmlRegisterType(DepositEntry, "PyPay", 1, 0, "DepositEntry")
    qmlRegisterType(DepositModel, "PyPay", 1, 0, "DepositModel")
    qmlRegisterType(BorrowEntry, "PyPay", 1, 0, "BorrowEntry")
    qmlRegisterType(BorrowModel, "PyPay", 1, 0, "BorrowModel")

    payController = PayController()

    engine = QQmlApplicationEngine()
    engine.rootContext().setContextProperty("payController", payController)
    engine.load(QUrl.fromLocalFile(os.path.join(os.path.dirname(os.path.abspath(__file__)), "pypay/qml/main.qml")))
    if not engine.rootObjects():
        sys.exit(-1)

    try:
        exitCode = app.exec_()

        del engine
        del payController
        
        sys.exit(exitCode)
    except:
        print("exiting")

